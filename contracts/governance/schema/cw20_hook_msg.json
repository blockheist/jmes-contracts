{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Cw20HookMsg",
  "description": "This structure stores data for a CW20 hook message.",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "text_proposal"
      ],
      "properties": {
        "text_proposal": {
          "type": "object",
          "required": [
            "description",
            "title"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "request_feature"
      ],
      "properties": {
        "request_feature": {
          "type": "object",
          "required": [
            "description",
            "feature",
            "title"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "feature": {
              "$ref": "#/definitions/Feature"
            },
            "title": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "funding"
      ],
      "properties": {
        "funding": {
          "type": "object",
          "required": [
            "amount",
            "description",
            "duration",
            "title"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "description": {
              "type": "string"
            },
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "title": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Feature": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "artist_curator"
          ],
          "properties": {
            "artist_curator": {
              "type": "object",
              "required": [
                "approved",
                "duration"
              ],
              "properties": {
                "approved": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "duration": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
